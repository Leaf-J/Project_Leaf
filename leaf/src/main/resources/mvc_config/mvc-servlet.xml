<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	">

	<!-- 扫描注解Bean -->
	<context:component-scan base-package="**.controller" />

	<!-- 拦截器 -->
	<bean id="baseInterceptor" class="com.leaf.base.interceptor.BaseInterceptor" />
	<bean id="loginInterceptor" class="com.leaf.front.interceptor.LoginInterceptor" />

	<!-- 配置mvc mapping 注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="0" />
		<property name="interceptors">
			<list>
				<ref bean="baseInterceptor" />
				<ref bean="loginInterceptor" />
			</list>
		</property>
	</bean>
	<!-- 
		总是返回 406 错误 [无法接受 (Not acceptable)]
		按照 Spring 官方教程和其他人的经验，我们在使用 Spring MVC 时默认情况下，只要配置 <mvc:annotation-driven/> 
		就可以了，不再需要其他额外的配置，最后发现原因是自己在 spring-mvc.xml 配置文件中显式定义了一个AnnotationMethodHandlerAdapter 
		bean，这时就必须配置该 bean 的messageConverters 了，因为手动指定了 AnnotationMethodHandlerAdapter 
		后，默认的自动配置就不生效了。我们只需去掉自己额外手动添加的 AnnotationMethodHandlerAdapter bean 或是 配置该 
		bean 的 messageConverters 指定 supportedMediaTypes 就可以了，如： -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=utf-8</value>
						<value>text/html;charset=utf-8</value>
						<value>text/json;charset=utf-8</value>
						<value>application/json;charset=utf-8</value>
					</list>
				</property>
			</bean>
		</property>
	</bean>

	<!-- 内容协商解析器，通过协议头内容判定决定viewResolver -->
	<bean id="contentNegotiatingResolver"
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order"
			value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" /> 
		<!--		SpEl 表达式 -->
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="pdf" value="application/pdf" />
				<entry key="xsl" value="application/vnd.ms-excel" />
				<entry key="xml" value="application/xml" />
				<entry key="json" value="application/json" />
			</map>
		</property>
	</bean>
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="defaultEncoding" value="UTF-8"/>  
		<!-- 指定所上传文件的总大小不能超过1MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
		<property name="maxUploadSize" value="1024000000"/>  
	</bean>  
    
	<!-- 参考Spring攻略P371 <bean id="excelResolver" class="org.springframework.web.servlet.view.AbstractExcelView"> 
		<property name="order" value="#{contentNegotiatingResolver.order+1}"/> <property 
		name="suffix" value=".xsl"/> </bean> <bean id="pdfResolver" class="org.springframework.web.servlet.view.AbstractPdfView"> 
		<property name="order" value="#{excelResolver.order+1}"/> <property name="suffix" 
		value=".pdf"/> </bean> -->

	<bean id="defaultResourceResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="#{freemarkerResolver.order+1}" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- Sample <prop key="com.apress.springrecipes.court.service.ReservationNotAvailableException"> 
					reservationNotAvailable </prop> -->
				<prop
					key="com.leaf.videoadmin.authen.exception.AdminAccessDeniedException">access_denied</prop>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->  
				<!--<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>-->  					
			</props>
		</property>
		<property name="defaultErrorView" value="error" />
	</bean>

	
	<!-- ===================================================== -->
	<!-- ViewResolver For FreeMarker -->
	<!-- ===================================================== -->
	<bean id="freemarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="order" value="#{contentNegotiatingResolver.order+1}" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
		</property>
	</bean> 
	<!-- ===================================================== -->
	<!-- ViewResolver For FreeMarkerConfigurer -->
	<!-- ===================================================== -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/WEB-INF/template/</value>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">5</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">UTF-8</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.####</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
			</props>
		</property>
	</bean>


	<!-- spring mvc对静态资源的访问 -->
	<!-- location:物理地址 mapping:逻辑地址 -->
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/uploads/" mapping="/uploads/**" />
	<mvc:resources location="/admin_res/" mapping="/adminRes/**" />
	<mvc:resources location="/html/" mapping="/html/**"/>
	<mvc:resources location="/videoPlayer/" mapping="/videoPlayer/**"/>
</beans>