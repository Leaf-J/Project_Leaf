<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                                http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                                http://www.springframework.org/schema/security   
                                http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 不要过滤图片等静态资源，其中**代表可以跨越目录，*不可以跨越目录。 -->
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.ico" security="none" />

	<!-- 不拦截登陆url -->
	<http pattern="/videoadmin/login" security="none"/>

	<http auto-config="false" use-expressions="true">
	
		<form-login login-page="/videoadmin/login"
			authentication-failure-url="/videoadmin/login" default-target-url="/videoadmin/main"
			login-processing-url="/videoadmin/authen" password-parameter="password" username-parameter="username"
			/> <!-- 更改默认校验地址j_spring_security_check 用户名和密码-->
		
		<session-management invalid-session-url="/videoadmin/login">
			<!-- error-if-maximum-exceeded:若超出规定session数，则不允许登录。如果没有声明此属性，则最近的一次登录会把已存在的session踢掉 -->
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
		</session-management>
		<!-- 测试发现与session并发控制有冲突，remember me 功能登录不了
		<remember-me token-validity-seconds="3600" user-service-ref="adminUserService"/> -->
		
		<logout logout-url="/videoadmin/logout" logout-success-url="/videoadmin/login"/>
		
		<custom-filter ref="adminSecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
	</http>
	<beans:bean id="adminSecurityFilter" class="com.leaf.videoadmin.authen.interceptor.SecurityInterceptor">
		<beans:property name="accessDecisionManager" ref="leafAccessDecisionManager"/><!-- 资源访问决策 -->
		<beans:property name="authenticationManager" ref="leafAuthenticationManager"/><!-- 登陆的认证 -->
		<beans:property name="securityMetadataSource" ref="leafSecurityMetadataSource"/><!-- 资源和权限列表 -->
	</beans:bean>
	
	<authentication-manager alias="leafAuthenticationManager" erase-credentials="true">
		<authentication-provider user-service-ref="adminUserService">
			<password-encoder hash="md5">
				<!-- 带盐值加密，加密原文 【密码】{用户名} ==> md5 ==> 密文 -->
				<salt-source user-property="name"/><!-- adminUser的name属性 -->
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	<!--使用注释
	 <beans:bean name="adminUserService" class="com.leaf.videoadmin.authen.service.AdminUserService"/> -->
	<beans:bean name="leafAccessDecisionManager" class="com.leaf.videoadmin.authen.interceptor.component.AdminAccessDecisionManager"/>
	<beans:bean name="leafSecurityMetadataSource" class="com.leaf.videoadmin.authen.interceptor.component.AdminSecurityMetadataSource"/>

</beans:beans>